// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientsInformationAPI.Data;

#nullable disable

namespace PatientsInformationAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240210005735_ThirdMigration")]
    partial class ThirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.Allergy", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.Disease", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DiseaseInformation");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.NCD", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NCD");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.Patient", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HasEpilepsy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PatientsInforamtion");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.RelationshipModel.Allergies_Details", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllergiesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AllergyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AllergyID");

                    b.HasIndex("PatientID");

                    b.ToTable("Allergies_Details");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.RelationshipModel.NCD_Details", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NCDID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("NCDID");

                    b.HasIndex("PatientID");

                    b.ToTable("NCD_Details");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.RelationshipModel.Allergies_Details", b =>
                {
                    b.HasOne("PatientsInformationAPI.Models.Domains.Allergy", null)
                        .WithMany("Patients")
                        .HasForeignKey("AllergyID");

                    b.HasOne("PatientsInformationAPI.Models.Domains.Patient", null)
                        .WithMany("Allergies")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.RelationshipModel.NCD_Details", b =>
                {
                    b.HasOne("PatientsInformationAPI.Models.Domains.NCD", null)
                        .WithMany("Patients")
                        .HasForeignKey("NCDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientsInformationAPI.Models.Domains.Patient", null)
                        .WithMany("NCDs")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.Allergy", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.NCD", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("PatientsInformationAPI.Models.Domains.Patient", b =>
                {
                    b.Navigation("Allergies");

                    b.Navigation("NCDs");
                });
#pragma warning restore 612, 618
        }
    }
}
